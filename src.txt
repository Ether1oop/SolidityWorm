.code
  PUSH 80			contract A{\n    uint256[] a;\...
  PUSH 40			contract A{\n    uint256[] a;\...
  MSTORE 			contract A{\n    uint256[] a;\...
  CALLVALUE 			contract A{\n    uint256[] a;\...
  DUP1 			contract A{\n    uint256[] a;\...
  ISZERO 			contract A{\n    uint256[] a;\...
  PUSH [tag] 1			contract A{\n    uint256[] a;\...
  JUMPI 			contract A{\n    uint256[] a;\...
  PUSH 0			contract A{\n    uint256[] a;\...
  DUP1 			contract A{\n    uint256[] a;\...
  REVERT 			contract A{\n    uint256[] a;\...
tag 1			contract A{\n    uint256[] a;\...
  JUMPDEST 			contract A{\n    uint256[] a;\...
  POP 			contract A{\n    uint256[] a;\...
  PUSH #[$] 0000000000000000000000000000000000000000000000000000000000000000			contract A{\n    uint256[] a;\...
  DUP1 			contract A{\n    uint256[] a;\...
  PUSH [$] 0000000000000000000000000000000000000000000000000000000000000000			contract A{\n    uint256[] a;\...
  PUSH 0			contract A{\n    uint256[] a;\...
  CODECOPY 			contract A{\n    uint256[] a;\...
  PUSH 0			contract A{\n    uint256[] a;\...
  RETURN 			contract A{\n    uint256[] a;\...
.data
  0:
    .code
      PUSH 80			contract A{\n    uint256[] a;\...
      PUSH 40			contract A{\n    uint256[] a;\...
      MSTORE 			contract A{\n    uint256[] a;\...
      CALLVALUE 			contract A{\n    uint256[] a;\...
      DUP1 			contract A{\n    uint256[] a;\...
      ISZERO 			contract A{\n    uint256[] a;\...
      PUSH [tag] 1			contract A{\n    uint256[] a;\...
      JUMPI 			contract A{\n    uint256[] a;\...
      PUSH 0			contract A{\n    uint256[] a;\...
      DUP1 			contract A{\n    uint256[] a;\...
      REVERT 			contract A{\n    uint256[] a;\...
    tag 1			contract A{\n    uint256[] a;\...
      JUMPDEST 			contract A{\n    uint256[] a;\...
      POP 			contract A{\n    uint256[] a;\...
      PUSH 4			contract A{\n    uint256[] a;\...
      CALLDATASIZE 			contract A{\n    uint256[] a;\...
      LT 			contract A{\n    uint256[] a;\...
      PUSH [tag] 2			contract A{\n    uint256[] a;\...
      JUMPI 			contract A{\n    uint256[] a;\...
      PUSH 0			contract A{\n    uint256[] a;\...
      CALLDATALOAD 			contract A{\n    uint256[] a;\...
      PUSH E0			contract A{\n    uint256[] a;\...
      SHR 			contract A{\n    uint256[] a;\...
      DUP1 			contract A{\n    uint256[] a;\...
      PUSH F8A8FD6D			contract A{\n    uint256[] a;\...
      EQ 			contract A{\n    uint256[] a;\...
      PUSH [tag] 3			contract A{\n    uint256[] a;\...
      JUMPI 			contract A{\n    uint256[] a;\...
    tag 2			contract A{\n    uint256[] a;\...
      JUMPDEST 			contract A{\n    uint256[] a;\...
      PUSH 0			contract A{\n    uint256[] a;\...
      DUP1 			contract A{\n    uint256[] a;\...
      REVERT 			contract A{\n    uint256[] a;\...
    tag 3			function test() public{\n     ...
      JUMPDEST 			function test() public{\n     ...
      PUSH [tag] 4			function test() public{\n     ...
      PUSH [tag] 5			function test() public{\n     ...
      JUMP [in]			function test() public{\n     ...
    tag 4			function test() public{\n     ...
      JUMPDEST 			function test() public{\n     ...
      STOP 			function test() public{\n     ...
    tag 5			function test() public{\n     ...
      JUMPDEST 			function test() public{\n     ...
      PUSH 60			uint256[] memory b
      PUSH 0			a
      DUP1 			uint256[] memory b = a
      SLOAD 			uint256[] memory b = a
      DUP1 			uint256[] memory b = a
      PUSH 20			uint256[] memory b = a
      MUL 			uint256[] memory b = a
      PUSH 20			uint256[] memory b = a
      ADD 			uint256[] memory b = a
      PUSH 40			uint256[] memory b = a
      MLOAD 			uint256[] memory b = a
      SWAP1 			uint256[] memory b = a
      DUP2 			uint256[] memory b = a
      ADD 			uint256[] memory b = a
      PUSH 40			uint256[] memory b = a
      MSTORE 			uint256[] memory b = a
      DUP1 			uint256[] memory b = a
      SWAP3 			uint256[] memory b = a
      SWAP2 			uint256[] memory b = a
      SWAP1 			uint256[] memory b = a
      DUP2 			uint256[] memory b = a
      DUP2 			uint256[] memory b = a
      MSTORE 			uint256[] memory b = a
      PUSH 20			uint256[] memory b = a
      ADD 			uint256[] memory b = a
      DUP3 			uint256[] memory b = a
      DUP1 			uint256[] memory b = a
      SLOAD 			uint256[] memory b = a
      DUP1 			uint256[] memory b = a
      ISZERO 			uint256[] memory b = a
      PUSH [tag] 7			uint256[] memory b = a
      JUMPI 			uint256[] memory b = a
      PUSH 20			uint256[] memory b = a
      MUL 			uint256[] memory b = a
      DUP3 			uint256[] memory b = a
      ADD 			uint256[] memory b = a
      SWAP2 			uint256[] memory b = a
      SWAP1 			uint256[] memory b = a
      PUSH 0			uint256[] memory b = a
      MSTORE 			uint256[] memory b = a
      PUSH 20			uint256[] memory b = a
      PUSH 0			uint256[] memory b = a
      KECCAK256 			uint256[] memory b = a
      SWAP1 			uint256[] memory b = a
    tag 8			uint256[] memory b = a
      JUMPDEST 			uint256[] memory b = a
      DUP2 			uint256[] memory b = a
      SLOAD 			uint256[] memory b = a
      DUP2 			uint256[] memory b = a
      MSTORE 			uint256[] memory b = a
      PUSH 20			uint256[] memory b = a
      ADD 			uint256[] memory b = a
      SWAP1 			uint256[] memory b = a
      PUSH 1			uint256[] memory b = a
      ADD 			uint256[] memory b = a
      SWAP1 			uint256[] memory b = a
      DUP1 			uint256[] memory b = a
      DUP4 			uint256[] memory b = a
      GT 			uint256[] memory b = a
      PUSH [tag] 8			uint256[] memory b = a
      JUMPI 			uint256[] memory b = a
    tag 7			uint256[] memory b = a
      JUMPDEST 			uint256[] memory b = a
      POP 			uint256[] memory b = a
      POP 			uint256[] memory b = a
      POP 			uint256[] memory b = a
      POP 			uint256[] memory b = a
      POP 			uint256[] memory b = a
      SWAP1 			uint256[] memory b = a
      POP 			uint256[] memory b = a
      PUSH C1D1526238DDA017D6BBB67B458C5C463C12614694B4052D090A4979F5B38885			record(a)
      PUSH 0			a
      PUSH 40			record(a)
      MLOAD 			record(a)
      DUP1 			record(a)
      DUP1 			record(a)
      PUSH 20			record(a)
      ADD 			record(a)
      DUP3 			record(a)
      DUP2 			record(a)
      SUB 			record(a)
      DUP3 			record(a)
      MSTORE 			record(a)
      DUP4 			record(a)
      DUP2 			record(a)
      DUP2 			record(a)
      SLOAD 			record(a)
      DUP2 			record(a)
      MSTORE 			record(a)
      PUSH 20			record(a)
      ADD 			record(a)
      SWAP2 			record(a)
      POP 			record(a)
      DUP1 			record(a)
      SLOAD 			record(a)
      DUP1 			record(a)
      ISZERO 			record(a)
      PUSH [tag] 9			record(a)
      JUMPI 			record(a)
      PUSH 20			record(a)
      MUL 			record(a)
      DUP3 			record(a)
      ADD 			record(a)
      SWAP2 			record(a)
      SWAP1 			record(a)
      PUSH 0			record(a)
      MSTORE 			record(a)
      PUSH 20			record(a)
      PUSH 0			record(a)
      KECCAK256 			record(a)
      SWAP1 			record(a)
    tag 10			record(a)
      JUMPDEST 			record(a)
      DUP2 			record(a)
      SLOAD 			record(a)
      DUP2 			record(a)
      MSTORE 			record(a)
      PUSH 20			record(a)
      ADD 			record(a)
      SWAP1 			record(a)
      PUSH 1			record(a)
      ADD 			record(a)
      SWAP1 			record(a)
      DUP1 			record(a)
      DUP4 			record(a)
      GT 			record(a)
      PUSH [tag] 10			record(a)
      JUMPI 			record(a)
    tag 9			record(a)
      JUMPDEST 			record(a)
      POP 			record(a)
      POP 			record(a)
      SWAP3 			record(a)
      POP 			record(a)
      POP 			record(a)
      POP 			record(a)
      PUSH 40			record(a)
      MLOAD 			record(a)
      DUP1 			record(a)
      SWAP2 			record(a)
      SUB 			record(a)
      SWAP1 			record(a)
      LOG1 			record(a)
      POP 			function test() public{\n     ...
      JUMP [out]			function test() public{\n     ...
    .data